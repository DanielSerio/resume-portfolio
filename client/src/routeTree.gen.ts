/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ShowcaseRouteRouteImport } from './routes/showcase/route'
import { Route as AdminRouteRouteImport } from './routes/admin/route'
import { Route as resumeRouteRouteImport } from './routes/(resume)/route'
import { Route as ShowcaseIndexRouteImport } from './routes/showcase/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as resumeIndexRouteImport } from './routes/(resume)/index'
import { Route as ShowcaseIdRouteImport } from './routes/showcase/$id'
import { Route as AdminSubcategoriesRouteImport } from './routes/admin/subcategories'
import { Route as AdminSkillsRouteImport } from './routes/admin/skills'
import { Route as AdminEmployerExperiencesRouteImport } from './routes/admin/employer-experiences'
import { Route as AdminCategoriesRouteImport } from './routes/admin/categories'

const ShowcaseRouteRoute = ShowcaseRouteRouteImport.update({
  id: '/showcase',
  path: '/showcase',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const resumeRouteRoute = resumeRouteRouteImport.update({
  id: '/(resume)',
  getParentRoute: () => rootRouteImport,
} as any)
const ShowcaseIndexRoute = ShowcaseIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ShowcaseRouteRoute,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const resumeIndexRoute = resumeIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => resumeRouteRoute,
} as any)
const ShowcaseIdRoute = ShowcaseIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => ShowcaseRouteRoute,
} as any)
const AdminSubcategoriesRoute = AdminSubcategoriesRouteImport.update({
  id: '/subcategories',
  path: '/subcategories',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminSkillsRoute = AdminSkillsRouteImport.update({
  id: '/skills',
  path: '/skills',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminEmployerExperiencesRoute =
  AdminEmployerExperiencesRouteImport.update({
    id: '/employer-experiences',
    path: '/employer-experiences',
    getParentRoute: () => AdminRouteRoute,
  } as any)
const AdminCategoriesRoute = AdminCategoriesRouteImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => AdminRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof resumeIndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/showcase': typeof ShowcaseRouteRouteWithChildren
  '/admin/categories': typeof AdminCategoriesRoute
  '/admin/employer-experiences': typeof AdminEmployerExperiencesRoute
  '/admin/skills': typeof AdminSkillsRoute
  '/admin/subcategories': typeof AdminSubcategoriesRoute
  '/showcase/$id': typeof ShowcaseIdRoute
  '/admin/': typeof AdminIndexRoute
  '/showcase/': typeof ShowcaseIndexRoute
}
export interface FileRoutesByTo {
  '/admin/categories': typeof AdminCategoriesRoute
  '/admin/employer-experiences': typeof AdminEmployerExperiencesRoute
  '/admin/skills': typeof AdminSkillsRoute
  '/admin/subcategories': typeof AdminSubcategoriesRoute
  '/showcase/$id': typeof ShowcaseIdRoute
  '/': typeof resumeIndexRoute
  '/admin': typeof AdminIndexRoute
  '/showcase': typeof ShowcaseIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(resume)': typeof resumeRouteRouteWithChildren
  '/admin': typeof AdminRouteRouteWithChildren
  '/showcase': typeof ShowcaseRouteRouteWithChildren
  '/admin/categories': typeof AdminCategoriesRoute
  '/admin/employer-experiences': typeof AdminEmployerExperiencesRoute
  '/admin/skills': typeof AdminSkillsRoute
  '/admin/subcategories': typeof AdminSubcategoriesRoute
  '/showcase/$id': typeof ShowcaseIdRoute
  '/(resume)/': typeof resumeIndexRoute
  '/admin/': typeof AdminIndexRoute
  '/showcase/': typeof ShowcaseIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/showcase'
    | '/admin/categories'
    | '/admin/employer-experiences'
    | '/admin/skills'
    | '/admin/subcategories'
    | '/showcase/$id'
    | '/admin/'
    | '/showcase/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/admin/categories'
    | '/admin/employer-experiences'
    | '/admin/skills'
    | '/admin/subcategories'
    | '/showcase/$id'
    | '/'
    | '/admin'
    | '/showcase'
  id:
    | '__root__'
    | '/(resume)'
    | '/admin'
    | '/showcase'
    | '/admin/categories'
    | '/admin/employer-experiences'
    | '/admin/skills'
    | '/admin/subcategories'
    | '/showcase/$id'
    | '/(resume)/'
    | '/admin/'
    | '/showcase/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  resumeRouteRoute: typeof resumeRouteRouteWithChildren
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  ShowcaseRouteRoute: typeof ShowcaseRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/showcase': {
      id: '/showcase'
      path: '/showcase'
      fullPath: '/showcase'
      preLoaderRoute: typeof ShowcaseRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(resume)': {
      id: '/(resume)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof resumeRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/showcase/': {
      id: '/showcase/'
      path: '/'
      fullPath: '/showcase/'
      preLoaderRoute: typeof ShowcaseIndexRouteImport
      parentRoute: typeof ShowcaseRouteRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/(resume)/': {
      id: '/(resume)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof resumeIndexRouteImport
      parentRoute: typeof resumeRouteRoute
    }
    '/showcase/$id': {
      id: '/showcase/$id'
      path: '/$id'
      fullPath: '/showcase/$id'
      preLoaderRoute: typeof ShowcaseIdRouteImport
      parentRoute: typeof ShowcaseRouteRoute
    }
    '/admin/subcategories': {
      id: '/admin/subcategories'
      path: '/subcategories'
      fullPath: '/admin/subcategories'
      preLoaderRoute: typeof AdminSubcategoriesRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/skills': {
      id: '/admin/skills'
      path: '/skills'
      fullPath: '/admin/skills'
      preLoaderRoute: typeof AdminSkillsRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/employer-experiences': {
      id: '/admin/employer-experiences'
      path: '/employer-experiences'
      fullPath: '/admin/employer-experiences'
      preLoaderRoute: typeof AdminEmployerExperiencesRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/categories': {
      id: '/admin/categories'
      path: '/categories'
      fullPath: '/admin/categories'
      preLoaderRoute: typeof AdminCategoriesRouteImport
      parentRoute: typeof AdminRouteRoute
    }
  }
}

interface resumeRouteRouteChildren {
  resumeIndexRoute: typeof resumeIndexRoute
}

const resumeRouteRouteChildren: resumeRouteRouteChildren = {
  resumeIndexRoute: resumeIndexRoute,
}

const resumeRouteRouteWithChildren = resumeRouteRoute._addFileChildren(
  resumeRouteRouteChildren,
)

interface AdminRouteRouteChildren {
  AdminCategoriesRoute: typeof AdminCategoriesRoute
  AdminEmployerExperiencesRoute: typeof AdminEmployerExperiencesRoute
  AdminSkillsRoute: typeof AdminSkillsRoute
  AdminSubcategoriesRoute: typeof AdminSubcategoriesRoute
  AdminIndexRoute: typeof AdminIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminCategoriesRoute: AdminCategoriesRoute,
  AdminEmployerExperiencesRoute: AdminEmployerExperiencesRoute,
  AdminSkillsRoute: AdminSkillsRoute,
  AdminSubcategoriesRoute: AdminSubcategoriesRoute,
  AdminIndexRoute: AdminIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface ShowcaseRouteRouteChildren {
  ShowcaseIdRoute: typeof ShowcaseIdRoute
  ShowcaseIndexRoute: typeof ShowcaseIndexRoute
}

const ShowcaseRouteRouteChildren: ShowcaseRouteRouteChildren = {
  ShowcaseIdRoute: ShowcaseIdRoute,
  ShowcaseIndexRoute: ShowcaseIndexRoute,
}

const ShowcaseRouteRouteWithChildren = ShowcaseRouteRoute._addFileChildren(
  ShowcaseRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  resumeRouteRoute: resumeRouteRouteWithChildren,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  ShowcaseRouteRoute: ShowcaseRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
