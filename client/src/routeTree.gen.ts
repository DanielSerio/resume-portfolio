/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ShowcaseIndexRouteImport } from './routes/showcase/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as resumeIndexRouteImport } from './routes/(resume)/index'
import { Route as ShowcaseIdRouteImport } from './routes/showcase/$id'
import { Route as AdminSubcategoriesRouteImport } from './routes/admin/subcategories'
import { Route as AdminSkillsRouteImport } from './routes/admin/skills'
import { Route as AdminCategoriesRouteImport } from './routes/admin/categories'

const ShowcaseIndexRoute = ShowcaseIndexRouteImport.update({
  id: '/showcase/',
  path: '/showcase/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)
const resumeIndexRoute = resumeIndexRouteImport.update({
  id: '/(resume)/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ShowcaseIdRoute = ShowcaseIdRouteImport.update({
  id: '/showcase/$id',
  path: '/showcase/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminSubcategoriesRoute = AdminSubcategoriesRouteImport.update({
  id: '/admin/subcategories',
  path: '/admin/subcategories',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminSkillsRoute = AdminSkillsRouteImport.update({
  id: '/admin/skills',
  path: '/admin/skills',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminCategoriesRoute = AdminCategoriesRouteImport.update({
  id: '/admin/categories',
  path: '/admin/categories',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/admin/categories': typeof AdminCategoriesRoute
  '/admin/skills': typeof AdminSkillsRoute
  '/admin/subcategories': typeof AdminSubcategoriesRoute
  '/showcase/$id': typeof ShowcaseIdRoute
  '/': typeof resumeIndexRoute
  '/admin': typeof AdminIndexRoute
  '/showcase': typeof ShowcaseIndexRoute
}
export interface FileRoutesByTo {
  '/admin/categories': typeof AdminCategoriesRoute
  '/admin/skills': typeof AdminSkillsRoute
  '/admin/subcategories': typeof AdminSubcategoriesRoute
  '/showcase/$id': typeof ShowcaseIdRoute
  '/': typeof resumeIndexRoute
  '/admin': typeof AdminIndexRoute
  '/showcase': typeof ShowcaseIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/admin/categories': typeof AdminCategoriesRoute
  '/admin/skills': typeof AdminSkillsRoute
  '/admin/subcategories': typeof AdminSubcategoriesRoute
  '/showcase/$id': typeof ShowcaseIdRoute
  '/(resume)/': typeof resumeIndexRoute
  '/admin/': typeof AdminIndexRoute
  '/showcase/': typeof ShowcaseIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/admin/categories'
    | '/admin/skills'
    | '/admin/subcategories'
    | '/showcase/$id'
    | '/'
    | '/admin'
    | '/showcase'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/admin/categories'
    | '/admin/skills'
    | '/admin/subcategories'
    | '/showcase/$id'
    | '/'
    | '/admin'
    | '/showcase'
  id:
    | '__root__'
    | '/admin/categories'
    | '/admin/skills'
    | '/admin/subcategories'
    | '/showcase/$id'
    | '/(resume)/'
    | '/admin/'
    | '/showcase/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AdminCategoriesRoute: typeof AdminCategoriesRoute
  AdminSkillsRoute: typeof AdminSkillsRoute
  AdminSubcategoriesRoute: typeof AdminSubcategoriesRoute
  ShowcaseIdRoute: typeof ShowcaseIdRoute
  resumeIndexRoute: typeof resumeIndexRoute
  AdminIndexRoute: typeof AdminIndexRoute
  ShowcaseIndexRoute: typeof ShowcaseIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/showcase/': {
      id: '/showcase/'
      path: '/showcase'
      fullPath: '/showcase'
      preLoaderRoute: typeof ShowcaseIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(resume)/': {
      id: '/(resume)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof resumeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/showcase/$id': {
      id: '/showcase/$id'
      path: '/showcase/$id'
      fullPath: '/showcase/$id'
      preLoaderRoute: typeof ShowcaseIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/subcategories': {
      id: '/admin/subcategories'
      path: '/admin/subcategories'
      fullPath: '/admin/subcategories'
      preLoaderRoute: typeof AdminSubcategoriesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/skills': {
      id: '/admin/skills'
      path: '/admin/skills'
      fullPath: '/admin/skills'
      preLoaderRoute: typeof AdminSkillsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/categories': {
      id: '/admin/categories'
      path: '/admin/categories'
      fullPath: '/admin/categories'
      preLoaderRoute: typeof AdminCategoriesRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  AdminCategoriesRoute: AdminCategoriesRoute,
  AdminSkillsRoute: AdminSkillsRoute,
  AdminSubcategoriesRoute: AdminSubcategoriesRoute,
  ShowcaseIdRoute: ShowcaseIdRoute,
  resumeIndexRoute: resumeIndexRoute,
  AdminIndexRoute: AdminIndexRoute,
  ShowcaseIndexRoute: ShowcaseIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
